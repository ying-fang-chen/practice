'''
題目敘述
如果你在一家零售店幫消費的客人結帳，你可能需要快速地挑出合適且數量正確的鈔票與零錢。假設客人的消費金額 aa 一定是 1 到 1000 之間的整數，而你有無限量的 500、100、50、10、5、1 這些面額的鈔票和零錢，我們希望你能依照下面的規則找錢：

你找的錢的總額要是 1000 - a1000−a。
與其給客人五張 100 元，不如給他一張 500 元；與其給客人兩個 50 元，不如給他一張 100 元……依此類推。
以下是一些範例：

如果客人消費 200 元，你應該找給他 1 張 500 元和 3 張 100 元。
如果客人消費 286 元，你應該找給他 1 張 500 元、2 張 100 元、1 個 10 元和 4 個一元。
如果客人消費 925 元，你應該找給他 1 個 50 元、2 個 10 元和 1 個 5 元。
在本題中，你將會被給予上述的整數 aa，而你要找出符合上述規則的唯一找錢方式。
輸入輸出格式
在每筆測試資料中，會有一個整數 aa 代表客人的消費金額，aa 會介於 1 到 999 之間（包含 1 跟 999）。
讀入 aa 之後，你會依照題目指定的規則找出每種面額的鈔票或銅板應該要給幾張或幾個，
然後由面額大至面額小依序輸出所需鈔票張數或銅板個數，但如果不應該找給客人某個面額的鈔票或銅板，
就跳過該面額不要輸出。因為這樣一來可能只輸出少於 6 個數字，
會不知道怎麼對應到面額，因此現在要把面額與所需張數（個數）成對地輸出，
中間用一個逗點和一個空格隔開，而面額與面額之間用一個分號和一個空格隔開。
'''
#version 1
a=int(input())
t=1000-a
#500, 100, 50, 10, 5, 1
w=t//500
num1=t-500*w
x=num1//100
num2=num1-x*100
y=num2//50
num3=num2-y*50
z=num3//10
num4=num3-10*z
j=num4//5
q=num4-5*j
print(str(w)+" "+str(x)+" "+str(y)+" "+str(z)+" "+str(j)+" "+str(q))
n=""
if w!=0:
    n="; 500, "+str(w)
if x!=0:
    n=n+"; 100, "+str(x)
if y!=0:
    n=n+"; 50, "+str(y)
if z!=0:
    n=n+"; 10, "+str(z)
if j!=0:
    n=n+"; 5, "+str(j)
if q!=0:
    n=n+"; 1, "+str(q)
print(n[2:])

#version 2 (for-loop applied)
cost=int(input())
left=1000-cost
money=[500,100,50,10,5,1]
n=""
for i in range(len(money)):
    num_return=left//money[i]
    left=left-money[i]*num_return
    if num_return!=0:
        n=n+str(money[i])+", "+str(num_return)+"; "
print(n[:-2])
